package bia;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;

public class miaomioa {

    private static final int BUFFER_SIZE = 4096;
    public static void main(String[] args) {
        if (args.length < 3) {return;}
        String fileURL = args[0];
        int numThreads = Integer.parseInt(args[1]);
        String outputFileName = args[2];
        try {
            URL url = new URL(fileURL);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            int fileSize = connection.getContentLength();
            connection.disconnect();
            int blockSize = fileSize / numThreads + 1;
            Thread[] downloadThreads = new Thread[numThreads];
            RandomAccessFile outputFile = new RandomAccessFile(outputFileName, "rw");
            outputFile.setLength(fileSize);
            outputFile.close();
            for (int i = 0; i < numThreads; i++) {
                int startByte = i * blockSize;
                int endByte = Math.min((i + 1) * blockSize - 1, fileSize - 1);
                downloadThreads[i] = new DownloadThread(fileURL, outputFileName, startByte, endByte);
                downloadThreads[i].start();
            }
            for (int i = 0; i < numThreads; i++) {
                downloadThreads[i].join();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    static class DownloadThread extends Thread {
        private String fileURL;
        private String outputFileName;
        private int startByte;
        private int endByte;
        public DownloadThread(String fileURL, String outputFileName, int startByte, int endByte) {
            this.fileURL = fileURL;
            this.outputFileName = outputFileName;
            this.startByte = startByte;
            this.endByte = endByte;
        }
        @Override
        public void run() {
            try {
                URL url = new URL(fileURL);
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestProperty("Range", "bytes=" + startByte + "-" + endByte);
                InputStream inputStream = connection.getInputStream();
                RandomAccessFile outputFile = new RandomAccessFile(outputFileName, "rw");
                outputFile.seek(startByte);
                byte[] buffer = new byte[BUFFER_SIZE];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputFile.write(buffer, 0, bytesRead);
                }
                inputStream.close();
                outputFile.close();
                connection.disconnect();
                System.out.println("Thread finished: downloaded bytes " + startByte + " to " + endByte);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
